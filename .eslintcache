[{"/Users/sekker/Desktop/react/frontend/src/index.tsx":"1","/Users/sekker/Desktop/react/frontend/src/serviceWorker.ts":"2","/Users/sekker/Desktop/react/frontend/src/app/store.ts":"3","/Users/sekker/Desktop/react/frontend/src/App.tsx":"4","/Users/sekker/Desktop/react/frontend/src/features/counter/counterSlice.ts":"5","/Users/sekker/Desktop/react/frontend/src/features/counter/Counter.tsx":"6","/Users/sekker/Desktop/react/frontend/src/components/Menu/Menu.tsx":"7","/Users/sekker/Desktop/react/frontend/src/components/Todolist/Todolist.tsx":"8","/Users/sekker/Desktop/react/frontend/src/components/Todolist/FormForTodo.tsx":"9","/Users/sekker/Desktop/react/frontend/src/components/registration/Registration.tsx":"10","/Users/sekker/Desktop/react/frontend/src/components/login/Login.tsx":"11"},{"size":607,"mtime":1608117134636,"results":"12","hashOfConfig":"13"},{"size":5424,"mtime":1608038820125,"results":"14","hashOfConfig":"13"},{"size":414,"mtime":1608038820118,"results":"15","hashOfConfig":"13"},{"size":2849,"mtime":1608848488714,"results":"16","hashOfConfig":"13"},{"size":1851,"mtime":1608038820122,"results":"17","hashOfConfig":"13"},{"size":1626,"mtime":1608038820120,"results":"18","hashOfConfig":"13"},{"size":767,"mtime":1608849920154,"results":"19","hashOfConfig":"13"},{"size":1895,"mtime":1608895537826,"results":"20","hashOfConfig":"13"},{"size":1796,"mtime":1608808642665,"results":"21","hashOfConfig":"13"},{"size":2998,"mtime":1608889579961,"results":"22","hashOfConfig":"13"},{"size":3529,"mtime":1608889450562,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1o8aj8o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/sekker/Desktop/react/frontend/src/index.tsx",[],["51","52"],"/Users/sekker/Desktop/react/frontend/src/serviceWorker.ts",[],"/Users/sekker/Desktop/react/frontend/src/app/store.ts",[],"/Users/sekker/Desktop/react/frontend/src/App.tsx",["53","54","55"],"import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, useHistory } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, PageHeader, Button, notification } from 'antd';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nimport { MenuComponent } from './components/Menu/Menu';\r\nimport { Todolist } from './components/Todolist/Todolist';\r\nimport { Registration } from './components/registration/Registration';\r\nimport { Login } from './components/login/Login';\r\nimport axios from 'axios';\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nfunction App() {\r\n  const [collapsed, setcollapsed] = useState(false);\r\n  const [user, setuser] = useState(String)\r\n  // let history = useHistory();\r\n  const toggle = () => {\r\n    setcollapsed(collapsed !== true ? true : false);\r\n  };\r\n  let history = useHistory();\r\n    \r\n  \r\n  const logout = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:8000/auth-token/token/logout/',      \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: `Token ${localStorage.getItem('token')}`\r\n      },\r\n    }).then(function (response) {\r\n      // handle success\r\n      \r\n      if (response.status >= 200 && response.status < 300) {\r\n        // history.push('/login')\r\n        notification['success']({\r\n          message: 'You sussessfully logout',\r\n        });\r\n      }\r\n    }).catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n      notification['error']({\r\n        message: 'You currently not login because you cant logout '\r\n      })\r\n    })\r\n    localStorage.clear()\r\n  }\r\n  return (\r\n    <Router>\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider\r\n          breakpoint=\"md\"\r\n          collapsible\r\n          collapsedWidth=\"0\"\r\n          trigger={null}\r\n          onCollapse={toggle}\r\n          collapsed={collapsed}\r\n        >\r\n          <MenuComponent />\r\n        </Sider>\r\n\r\n        <Layout className=\"site-layout\">\r\n          <PageHeader\r\n            title={user}\r\n            extra={[\r\n              <Button key=\"1\" onClick={toggle}>\r\n                <MenuOutlined />\r\n              </Button>,\r\n              \r\n              <Button key=\"2\" onClick={logout}>\r\n              Logout\r\n            </Button>,\r\n            \r\n            ]}\r\n          ></PageHeader>\r\n\r\n          <Content style={{ margin: '0 16px' }} >\r\n            <Route exact path=\"/\" component={Todolist}  />\r\n            <Route path=\"/registration\" component={Registration} />\r\n            <Route path=\"/login\" component={Login} />\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>\r\n            Â©2020 Created by Aleksandr Sekker\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/Users/sekker/Desktop/react/frontend/src/features/counter/counterSlice.ts",[],"/Users/sekker/Desktop/react/frontend/src/features/counter/Counter.tsx",[],"/Users/sekker/Desktop/react/frontend/src/components/Menu/Menu.tsx",["56"],"import React from 'react';\nimport { Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { DesktopOutlined, HomeOutlined } from '@ant-design/icons';\ninterface Props {}\n\nexport const MenuComponent = (props: Props) => {\n  return (\n    <>\n      <div className=\"logo\"></div>\n      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n        <Menu.Item key=\"1\" icon={<HomeOutlined />}>\n          Cards\n          <Link to=\"/\" />\n        </Menu.Item>\n        {/* <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n          Registration\n          <Link to=\"/registration\" />\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\n          Login\n          <Link to=\"/login\" />\n        </Menu.Item> */}\n      </Menu>\n    </>\n  );\n};\n","/Users/sekker/Desktop/react/frontend/src/components/Todolist/Todolist.tsx",[],"/Users/sekker/Desktop/react/frontend/src/components/Todolist/FormForTodo.tsx",[],"/Users/sekker/Desktop/react/frontend/src/components/registration/Registration.tsx",["57"],"import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, notification, Row } from 'antd';\nimport axios from 'axios';\nimport { NavLink, useHistory } from 'react-router-dom';\ninterface Props {\n    \n}\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n  \nexport const Registration = (props: Props) => {\n  const [email, setemail] = useState(String)\n  const [username, setusername] = useState(String)\n  const [password, setpassword] = useState(String)\n  const history = useHistory()\n    const onFinish = (values:any) => {\n        console.log('Success:', values);\n        axios({\n          method: 'post',\n          url: 'http://127.0.0.1:8000/auth/users/',\n          data: {\n            email: email,\n            username: username,\n            password: password\n          },\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        })\n          .then(function (response:any) {\n            console.log(response.status);\n            if (response.status >= 200 && response.status < 300) {\n              history.push('/')\n              notification['success']({\n                message: 'You sussessfully registred',\n              });\n            }\n          })\n          .catch(function (error:any) {\n            notification['error']({\n              message: 'You type wrong on of field'\n            })\n          });\n          \n      };\n    \n      const onFinishFailed = (errorInfo:any) => {\n        notification['error']({\n          message: 'You type wrong on of field'\n        })\n      };\n    return (\n        <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input value={username} onChange={(e) => {setusername(e.target.value)}} />\n      </Form.Item>\n      <Form.Item\n        label=\"Email address\"\n        name=\"Email address\"\n        rules={[{ required: true, message: 'Please input your Email address' }]}\n      >\n        <Input value={email} onChange={(e) => {setemail(e.target.value)}} />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password value={password} onChange={(e) => {setpassword(e.target.value)}} />\n      </Form.Item>\n      <Form.Item {...tailLayout} >\n        <Row>\n          <p style={{marginRight: '.5rem'}}>If already have account, you can</p>\n          <NavLink to='/login'>login</NavLink>\n        </Row>\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    )\n}\n","/Users/sekker/Desktop/react/frontend/src/components/login/Login.tsx",["58","59"],"import React, {useState, useEffect} from 'react'\nimport { Form, Input, Button, Checkbox, notification, Row } from 'antd';\nimport axios from 'axios';\nimport { NavLink, Redirect, useHistory } from 'react-router-dom';\ninterface Props {\n\n}\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n  \nexport const Login = (props: Props) => {\n  const [username, setusername] = useState(String)\n  const [password, setpassword] = useState(String)\n  const [user, setuser] = useState(String)\n  const isAuth = !!localStorage.getItem(\"token\");\n  const history = useHistory()\n    const onFinish = (values:any) => {\n        axios({\n          method: 'post',\n          url: 'http://127.0.0.1:8000/auth-token/token/login/',\n          data: {\n            username: username,\n            password: password\n          },\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        })\n          .then(function (response:any) {\n            localStorage.setItem('token', response.data.auth_token)\n            console.log(response.data.auth_token)\n            console.log(response.status);\n            if (response.status >= 200 && response.status < 300) {\n              history.push('/')\n              notification['success']({\n                message: 'You sussessfully login',\n              });\n            }\n          })\n          .catch(function (error:any) {\n            notification['error']({\n              message: 'You type wrong username or password'\n            })\n          });\n          axios({\n            method: 'post',\n            url: 'http://127.0.0.1:8000/user/user/by/token/',      \n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              Authorization: `Token ${localStorage.getItem('token')}`\n      \n            },\n          }).then(function (response) {\n            // handle success\n            setuser(response.data.username)\n          })\n         .catch(function (error) {\n            // handle error\n            console.log(error);\n          })\n      };\n      useEffect(() => {\n        console.log('update')\n\n      }, [isAuth])\n      const onFinishFailed = (errorInfo:any) => {\n        notification['error']({\n          message: 'You type wrong on of field'\n        })\n      };\n    return (<div>{isAuth ? <Redirect to='/' /> : (<Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input value={username} onChange={(e) => {setusername(e.target.value)}} />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password value={password} onChange={(e) => {setpassword(e.target.value)}} />\n      </Form.Item>\n      <Form.Item {...tailLayout} >\n        <Row>\n          <p style={{marginRight: '.5rem'}}>If don't have account, you can</p>\n          <NavLink to='/registration'>register</NavLink>\n        </Row>\n      </Form.Item>\n      \n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>)}</div>\n    )\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":42,"nodeType":"66","messageId":"67","endLine":2,"endColumn":50},{"ruleId":"64","severity":1,"message":"68","line":16,"column":16,"nodeType":"66","messageId":"67","endLine":16,"endColumn":23},{"ruleId":"64","severity":1,"message":"69","line":21,"column":7,"nodeType":"66","messageId":"67","endLine":21,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":25},{"ruleId":"64","severity":1,"message":"71","line":2,"column":31,"nodeType":"66","messageId":"67","endLine":2,"endColumn":39},{"ruleId":"64","severity":1,"message":"71","line":2,"column":31,"nodeType":"66","messageId":"67","endLine":2,"endColumn":39},{"ruleId":"64","severity":1,"message":"72","line":19,"column":10,"nodeType":"66","messageId":"67","endLine":19,"endColumn":14},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setuser' is assigned a value but never used.","'history' is assigned a value but never used.","'DesktopOutlined' is defined but never used.","'Checkbox' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]