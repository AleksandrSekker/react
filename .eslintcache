[{"/Users/sekker/Desktop/frontend/src/index.tsx":"1","/Users/sekker/Desktop/frontend/src/serviceWorker.ts":"2","/Users/sekker/Desktop/frontend/src/app/store.ts":"3","/Users/sekker/Desktop/frontend/src/App.tsx":"4","/Users/sekker/Desktop/frontend/src/features/counter/counterSlice.ts":"5","/Users/sekker/Desktop/frontend/src/components/Todolist/Todolist.tsx":"6","/Users/sekker/Desktop/frontend/src/components/Menu/Menu.tsx":"7","/Users/sekker/Desktop/frontend/src/components/login/Login.tsx":"8","/Users/sekker/Desktop/frontend/src/components/registration/Registration.tsx":"9","/Users/sekker/Desktop/frontend/src/components/Todolist/FormForTodo.tsx":"10","/Users/sekker/Desktop/frontend/src/components/contactform/ContactForm.tsx":"11"},{"size":607,"mtime":1608117134636,"results":"12","hashOfConfig":"13"},{"size":5424,"mtime":1608038820125,"results":"14","hashOfConfig":"13"},{"size":414,"mtime":1608038820118,"results":"15","hashOfConfig":"13"},{"size":2922,"mtime":1609244930256,"results":"16","hashOfConfig":"13"},{"size":1851,"mtime":1608038820122,"results":"17","hashOfConfig":"13"},{"size":1919,"mtime":1609244943676,"results":"18","hashOfConfig":"13"},{"size":760,"mtime":1609096115771,"results":"19","hashOfConfig":"13"},{"size":3532,"mtime":1609245919434,"results":"20","hashOfConfig":"13"},{"size":2988,"mtime":1609245011788,"results":"21","hashOfConfig":"13"},{"size":1821,"mtime":1609163216936,"results":"22","hashOfConfig":"13"},{"size":2285,"mtime":1609253699249,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1axs93w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sekker/Desktop/frontend/src/index.tsx",[],["48","49"],"/Users/sekker/Desktop/frontend/src/serviceWorker.ts",[],"/Users/sekker/Desktop/frontend/src/app/store.ts",[],"/Users/sekker/Desktop/frontend/src/App.tsx",[],"/Users/sekker/Desktop/frontend/src/features/counter/counterSlice.ts",[],"/Users/sekker/Desktop/frontend/src/components/Todolist/Todolist.tsx",[],"/Users/sekker/Desktop/frontend/src/components/Menu/Menu.tsx",[],"/Users/sekker/Desktop/frontend/src/components/login/Login.tsx",["50"],"import React, {useState, useEffect} from 'react'\nimport { Form, Input, Button,notification, Row } from 'antd';\nimport axios from 'axios';\nimport { NavLink, Redirect, useHistory } from 'react-router-dom';\ninterface Props {\n\n}\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n  \nexport const Login = (props: Props) => {\n  const [username, setusername] = useState(String)\n  const [password, setpassword] = useState(String)\n  const [user, setuser] = useState(String)\n  const isAuth = !!localStorage.getItem(\"token\");\n  const history = useHistory()\n  interface MyState {\n    values: String,\n  }\n    const onFinish = (values: MyState) => {\n        axios({\n          method: 'post',\n          url: 'http://127.0.0.1:8000/auth-token/token/login/',\n          data: {\n            username: username,\n            password: password\n          },\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        })\n          .then(function (response: any) {\n            localStorage.setItem('token', response.data.auth_token)\n            console.log(response.data.auth_token)\n            console.log(response.status);\n            if (response.status >= 200 && response.status < 300) {\n              \n              notification['success']({\n                message: 'You sussessfully login',\n              });\n              history.push('/')\n            }\n          })\n          .catch(function (error:string) {\n            notification['error']({\n              message: 'You type wrong username or password'\n            })\n          });\n          axios({\n            method: 'post',\n            url: 'http://127.0.0.1:8000/user/user/by/token/',      \n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              Authorization: `Token ${localStorage.getItem('token')}`\n      \n            },\n          }).then(function (response) {\n\n            setuser(response.data.username)\n          })\n         .catch(function (error) {\n\n            console.log(error);\n          })\n      };\n      useEffect(() => {\n        console.log('update')\n\n      }, [isAuth])\n      const onFinishFailed = (errorInfo:any) => {\n        notification['error']({\n          message: 'You type wrong on of field'\n        })\n      };\n    return (<div>{isAuth ? <Redirect to='/' /> : (<Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input value={username} onChange={(e) => {setusername(e.target.value)}} />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password value={password} onChange={(e) => {setpassword(e.target.value)}} />\n      </Form.Item>\n      <Form.Item {...tailLayout} >\n        <Row>\n          <p style={{marginRight: '.5rem'}}>If don't have account, you can</p>\n          <NavLink to='/registration'>register</NavLink>\n        </Row>\n      </Form.Item>\n      \n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>)}</div>\n    )\n}\n","/Users/sekker/Desktop/frontend/src/components/registration/Registration.tsx",[],"/Users/sekker/Desktop/frontend/src/components/Todolist/FormForTodo.tsx",[],"/Users/sekker/Desktop/frontend/src/components/contactform/ContactForm.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":19,"column":10,"nodeType":"57","messageId":"58","endLine":19,"endColumn":14},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]